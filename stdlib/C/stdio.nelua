!!strict
!!cinclude '<stdio.h>'

local FILE !cimport 'FILE' = @record{}
local fpos_t !cimport 'fpos_t' = @record{}

-- Operations on files
function C.remove(filename: cstring): cint !cimport 'remove' end
function C.rename(old: cstring, new: cstring): cint !cimport 'rename' end
function C.tmpfile(): FILE* !cimport 'tmpfile' end
function C.tmpnam(s: cstring): cstring !cimport 'tmpnam' end

-- File access
function C.fclose(stream: FILE*): cint !cimport 'fclose' end
function C.fflush(stream: FILE*): cint !cimport 'fflush' end
function C.fopen(filename: cstring, modes: cstring): FILE* !cimport 'fopen' end
function C.freopen(filename: cstring, modes: cstring, stream: FILE*): FILE* !cimport 'freopen' end

function C.setbuf(stream: FILE*, buf: cstring): void !cimport 'setbuf' end
function C.setvbuf(stream: FILE*, buf: cstring, modes: cint, n: csize): cint !cimport 'setvbuf' end

-- Formatted input/output
function C.scanf(format: cstring, ...): cint !cimport 'scanf' end
function C.fscanf(stream: FILE*, format: cstring, ...): cint !cimport 'fscanf' end
function C.sscanf(s: cstring, format: cstring, ...): cint !cimport 'sscanf' end

function C.vscanf(format: cstring, ...): cint !cimport 'vscanf' end
function C.vfscanf(s: FILE*, format: cstring, ...): cint !cimport 'vfscanf' end
function C.vsscanf(s: cstring, format: cstring, ...): cint !cimport 'vsscanf' end

function C.printf(format: cstring, ...): cint !cimport 'printf' end
function C.fprintf(stream: FILE*, format: cstring, ...): cint !cimport 'fprintf' end
function C.sprintf(s: cstring, format: cstring, ...): cint !cimport 'sprintf' end
function C.snprintf(s: cstring, maxlen: csize, format: cstring, ...): cint !cimport 'snprintf' end

function C.vprintf(format: cstring, ...): cint !cimport 'vprintf' end
function C.vfprintf(s: FILE*, format: cstring, ...): cint !cimport 'vfprintf' end
function C.vsprintf(s: cstring, format: cstring, ...): cint !cimport 'vsprintf' end
function C.vsnprintf(s: cstring, maxlen: csize, format: cstring, ...): cint !cimport 'vsnprintf' end

-- Character input/output
function C.getc(stream: FILE*): cint !cimport 'getc' end
function C.putc(c: cint, stream: FILE*): cint !cimport 'putc' end

function C.getchar(): cint !cimport 'getchar' end
function C.putchar(c: cint): cint !cimport 'putchar' end

function C.fgetc(stream: FILE*): cint !cimport 'fgetc' end
function C.fputc(c: cint, stream: FILE*): cint !cimport 'fputc' end

function C.fgets(s: cstring, n: cint, stream: FILE*): cstring !cimport 'fgets' end
function C.fputs(s: cstring, stream: FILE*): cint !cimport 'fputs' end

function C.gets(s: cstring): cstring !cimport 'puts' end
function C.puts(s: cstring): cint !cimport 'puts' end

function C.ungetc(c: cint, stream: FILE*): cint !cimport 'ungetc' end

-- Direct input/output
function C.fread(ptr: pointer, size: csize, n: csize, stream: FILE*): csize !cimport 'fread' end
function C.fwrite(ptr: void*, size: csize, n: csize, s: FILE*): csize !cimport 'fwrite' end

-- File positioning
function C.fgetpos(stream: FILE*, pos: fpos_t*): cint !cimport 'fgetpos' end
function C.fsetpos(stream: FILE*, pos: fpos_t*): cint !cimport 'fsetpos' end

function C.fseek(stream: FILE*, off: clong, whence: cint): cint !cimport 'fseek' end
function C.ftell(stream: FILE*): clong !cimport 'ftell' end

function C.rewind(stream: FILE*): void !cimport 'rewind' end

-- Error handling
function C.clearerr(stream: FILE*): void !cimport 'clearerr' end
function C.feof(stream: FILE*): cint !cimport 'feof' end
function C.ferror(stream: FILE*): cint !cimport 'ferror' end
function C.perror(s: cstring): void !cimport 'perror' end

-- Global variables
global C.stdin: FILE* !cimport 'stdin'
global C.stdout: FILE* !cimport 'stdout'
global C.stderr: FILE* !cimport 'stderr'

-- Constants
const C.EOF: cint !cimport 'EOF'
const C.BUFSIZ: cint !cimport 'BUFSIZ'

const C.FOPEN_MAX: cint !cimport 'FOPEN_MAX'
const C.FILENAME_MAX: cint !cimport 'FILENAME_MAX'

const C._IOFBF: cint !cimport '_IOFBF'
const C._IOLBF: cint !cimport '_IOLBF'
const C._IONBF: cint !cimport '_IONBF'

const C.SEEK_SET: cint !cimport 'SEEK_SET'
const C.SEEK_CUR: cint !cimport 'SEEK_CUR'
const C.SEEK_END: cint !cimport 'SEEK_END'

const C.TMP_MAX: cint !cimport 'TMP_MAX'
const C.L_tmpnam: cint !cimport 'L_tmpnam'
