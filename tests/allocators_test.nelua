require 'allocators.fixedlinear'

do -- basic tests on alloc/realloc/dealloc
  local allocator: FixedLinearAllocator(1024)
  local i: integer* = (@integer*)(allocator:alloc(#integer))
  assert($i == 0)
  $i = 0xff
  assert($i == 0xff)
  print(allocator.next_pos)
  assert(allocator.last_pos == 0 and allocator.next_pos == 8)
  allocator:dealloc(i)
  assert(allocator.last_pos == 0 and allocator.next_pos == 0)
  local ni: integer* = (@integer*)(allocator:alloc(#integer))
  assert(ni == i and $ni == 0)
  assert(allocator.last_pos == 0 and allocator.next_pos == 8)
  local a: integer[0]* = (@integer[0]*)(allocator:realloc(i, 32 * #@integer))
  assert((@integer*)(a) == i)
  assert(allocator.last_pos == 0 and allocator.next_pos == 8*32)
  for i=0,<32 do a[i] = 0xff end
  a = (@integer[0]*)(allocator:realloc(i, 8 * #@integer))
  assert(allocator.last_pos == 0 and allocator.next_pos == 8*8)
  for i=0,<8 do assert(a[i] == 0xff) end
  for i=8,<32 do assert(a[i] == 0) end
  a = (@integer[0]*)(allocator:realloc(i, 0))
  for i=0,<32 do assert(a[i] == 0) end
  assert(allocator.last_pos == 0 and allocator.next_pos == 0)
  a = (@integer[0]*)(allocator:alloc(1024))
  assert(a ~= nilptr)
  assert(allocator.last_pos == 0 and allocator.next_pos == 1024)
  assert(allocator:alloc(1) == nilptr)
  allocator:dealloc_all()
  assert(allocator.last_pos == 0 and allocator.next_pos == 0)
  for i=0,<1024 do
    assert(allocator.memory[i] == 0)
  end
end
