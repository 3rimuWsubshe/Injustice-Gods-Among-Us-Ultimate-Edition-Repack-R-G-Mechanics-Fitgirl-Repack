require 'allocators.arena'

do -- basic tests on alloc/realloc/dealloc
  local allocator: ArenaAllocator(1024,8)
  local i: integer* = (@integer*)(allocator:alloc0(#integer))
  assert($i == 0)
  $i = 0xff
  assert($i == 0xff)
  assert(allocator.prev_offset == 0 and allocator.curr_offset == 8)
  allocator:dealloc(i)
  assert(allocator.prev_offset == 0 and allocator.curr_offset == 0)
  local ni: integer* = (@integer*)(allocator:alloc0(#integer))
  assert(ni == i and $ni == 0)
  assert(allocator.prev_offset == 0 and allocator.curr_offset == 8)
  local a: integer[0]* = (@integer[0]*)(allocator:realloc0(i, 32 * #@integer, #@integer))
  assert((@integer*)(a) == i)
  assert(allocator.prev_offset == 0 and allocator.curr_offset == 8*32)
  for i=0,<32 do a[i] = 0xff end
  a = (@integer[0]*)(allocator:realloc0(i, 8 * #@integer, 32 * #@integer))
  assert(allocator.prev_offset == 0 and allocator.curr_offset == 8*8)
  for i=0,<8 do assert(a[i] == 0xff) end
  a = (@integer[0]*)(allocator:realloc0(i, 0, 8 * #@integer))
  for i=0,<32 do assert(a[i] == 0xff) end
  assert(allocator.prev_offset == 0 and allocator.curr_offset == 0)
  a = (@integer[0]*)(allocator:alloc0(1024))
  assert(a ~= nilptr)
  assert(allocator.prev_offset == 0 and allocator.curr_offset == 1024)
  assert(allocator:alloc0(1) == nilptr)
  allocator:dealloc_all()
  assert(allocator.prev_offset == 0 and allocator.curr_offset == 0)
  for i=0,<1024 do
    assert(allocator.buffer[i] == 0)
  end
end
