require 'traits'

do -- type
  assert(type(1) == 'number')
  assert(type(false) == 'boolean')
  assert(type(true) == 'boolean')
  assert(type(nilptr) == 'pointer')
  assert(type(nil) == 'nil')
  assert(type('a') == 'string')
  local function f() end
  local R = @record{x:integer}
  local r: R
  assert(type(r) == 'record')
  assert(r.x == 0)
  assert(type(f) == 'function')
  assert(type(R) == 'type')
  assert(type(r) == 'record')
  assert(type(&r) == 'pointer')

  local x = 1
  assert(type(x) == 'number')
end

do -- typeid_of
  assert(typeid_of(@niltype) == 0)
  assert(typeid_of(@string) == typeid_of('a'))
  assert(typeid_of(@integer) == typeid_of(1))
  assert(typeid_of(@integer) == typeid_of(1))
end

do -- typeinfo_of
  local niltype_typeinfo = typeinfo_of(@niltype)
  assert(niltype_typeinfo.id == 0)
  assert(niltype_typeinfo.name == 'niltype')
  assert(niltype_typeinfo.codename == 'nlniltype')
end
