require 'resourcepool'

local SLOT_SHIFT <comptime> = 32
local SLOT_MASK <comptime> = (1 << SLOT_SHIFT) - 1

local id: uint64, p: *integer
local pool: resourcepool(integer)

assert(pool:get(0) == nilptr)
assert(pool:get(1) == nilptr)

pool:reserve(3)
assert(pool.items.size == 4)
id, p = pool:alloc()
assert(id == 1 and $p == 0 and pool:get(1) == p)
$p = 3
assert($p == 3)

id, p = pool:alloc()
assert(id == 2 and $p == 0 and pool:get(2) == p)

pool:free(1)
assert(pool:get(1) == nilptr)

id, p = pool:alloc()
assert(id >> SLOT_SHIFT == 1 and id & SLOT_MASK == 1 and $p == 0 and pool:get(id) == p)
$p = 4
assert($p == 4)

pool:free(id)
assert(pool:get(id) == nilptr)

id, p = pool:alloc()
assert(id >> SLOT_SHIFT == 2 and id & SLOT_MASK == 1 and $p == 0 and pool:get(id) == p)

id, p = pool:alloc()
assert(id == 3 and $p == 0 and pool:get(3) == p)

pool:reserve(5)
assert(pool.items.size == 6)

id, p = pool:alloc()
assert(id == 4 and $p == 0 and pool:get(4) == p)

id, p = pool:alloc()
assert(id == 5 and $p == 0 and pool:get(5) == p)

pool:destroy()
