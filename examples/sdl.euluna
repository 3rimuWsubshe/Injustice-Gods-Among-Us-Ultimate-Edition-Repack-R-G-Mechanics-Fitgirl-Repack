-- TODO: import C types
-- TODO: nullptr
-- TODO: pass compiler parameters

-- import SDL functions
!!cdefine 'SDL_DISABLE_IMMINTRIN_H'
!!cinclude '<SDL2/SDL.h>'
!!linklib 'SDL2'

local SDL_WindowPtr = @pointer<record{}>
local SDL_INIT_VIDEO: uint32 !cimport
local SDL_WINDOWPOS_UNDEFINED: cint !cimport
local SDL_WINDOW_OPENGL: uint32 !cimport

local function SDL_Init(flags: uint32): int32 !cimport end
local function SDL_CreateWindow(title: cstring,
                                x: cint, y: cint, w: cint, h: cint,
                                flags: uint32): SDL_WindowPtr !cimport end
local function SDL_Quit() !cimport end
local function SDL_DestroyWindow(window: SDL_WindowPtr) !cimport end
local function SDL_Delay(ms: uint32) !cimport end

SDL_Init(SDL_INIT_VIDEO)

-- Create an application window with the following settings:
local window = SDL_CreateWindow("An SDL2 Window",
  SDL_WINDOWPOS_UNDEFINED,  -- initial x position
  SDL_WINDOWPOS_UNDEFINED,  -- initial y position
  640,                      -- width, in pixels
  480,                      -- height, in pixels
  SDL_WINDOW_OPENGL         -- flags - see below
)

-- Check that the window was successfully created
if not window then
  print("Could not create window")
  return 1
end

-- Pause execution for 3000 milliseconds as example
SDL_Delay(3000)

-- Close and destroy the window
SDL_DestroyWindow(window)

-- Clean up
SDL_Quit()

return 0
