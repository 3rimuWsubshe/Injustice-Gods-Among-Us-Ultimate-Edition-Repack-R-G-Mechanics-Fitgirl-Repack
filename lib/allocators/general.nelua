--[[
The general allocator uses the system's general purpose allocator to allocate dynamic memory,
usually this an efficient allocator for the general use case.
It uses the allocation functions provided by the system.
]]

local function malloc(size: csize): pointer <cimport,cinclude'<stdlib.h>'> end
local function calloc(nmemb: csize, size: csize): pointer <cimport,cinclude'<stdlib.h>'> end
local function realloc(ptr: pointer, size: csize): pointer <cimport,cinclude'<stdlib.h>'> end
local function free(ptr: pointer): void <cimport,cinclude'<stdlib.h>'> end

-- General allocator record.
global GeneralAllocator = @record{}

-- General allocator instance, that must be used to perform allocations.
global general_allocator: GeneralAllocator

--[[
Allocates `size` bytes and returns a pointer of the allocated memory block.

The allocated memory is not initialized.
For more details see `Allocator:alloc`.

This function calls system's `malloc()`.
]]
function GeneralAllocator:alloc(size: usize): pointer <inline>
  if unlikely(size == 0) then return nilptr end
  return malloc(size)
end

--[[
Like `alloc`, but the allocated memory is initialized with zeros.

This function calls system's `calloc()`.
]]
function GeneralAllocator:alloc0(size: usize): pointer <inline>
  if unlikely(size == 0) then return nilptr end
  return calloc(size, 1)
end

--[[
Deallocates the allocated memory block pointed by `p`.

For more details see `Allocator:dealloc`.
This function calls system's `free()`.
]]
function GeneralAllocator:dealloc(p: pointer): void <inline>
  if unlikely(p == nilptr) then return end
  free(p)
end

--[[
Changes the size of the memory block pointer by `p` from size `oldsize` bytes to `newsize` bytes.

For more details see `Allocator:realloc`.
This function calls system's `realloc()`.
]]
function GeneralAllocator:realloc(p: pointer, newsize: usize, oldsize: usize): pointer <inline>
  if unlikely(newsize == 0) then
    if likely(p ~= nilptr) then
      free(p)
    end
    return nilptr
  elseif unlikely(newsize == oldsize) then
    return p
  end
  return realloc(p, newsize)
end

require 'allocators.allocator'

## implement_allocator_interface(GeneralAllocator)
