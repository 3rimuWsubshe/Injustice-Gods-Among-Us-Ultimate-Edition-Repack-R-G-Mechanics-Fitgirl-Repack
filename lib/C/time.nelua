--[[
Library that imports symbols from the `<time.h>` header according to C11 specifications.

For a complete documentation about the functions,
see [C time documentation](https://www.cplusplus.com/reference/ctime/).
]]

require 'C'

-- Types

global C.clock_t: type <cimport'clock_t',cinclude'<time.h>',nodecl>
  = #[types.IntegralType('clock_t', primtypes.clong.size, false, primtypes.clong.align)]#
global C.time_t: type <cimport'time_t',cinclude'<time.h>',nodecl>
  = #[types.IntegralType('time_t', primtypes.clong.size, false, primtypes.clong.align)]#
global C.tm: type <cimport'tm',cinclude'<time.h>',nodecl,ctypedef> = @record{
  tm_sec: cint,
  tm_min: cint,
  tm_hour: cint,
  tm_mday: cint,
  tm_mon: cint,
  tm_year: cint,
  tm_wday: cint,
  tm_yday: cint,
  tm_isdst: cint
}
global C.timespec: type <cimport'timespec',cinclude'<time.h>',nodecl,ctypedef> = @record{
  tv_sec: C.time_t,
  tv_nsec: clong
}

-- Time manipulation

function C.clock(): C.clock_t <cimport'clock',cinclude'<time.h>',nodecl> end
function C.difftime(time1: C.time_t, time0: C.time_t): float64 <cimport'difftime',cinclude'<time.h>',nodecl> end
function C.mktime(tp: *C.tm): C.time_t <cimport'mktime',cinclude'<time.h>',nodecl> end
function C.strftime(s: cstring, maxsize: csize, format: cstring, tp: *C.tm): csize <cimport'strftime',cinclude'<time.h>',nodecl> end
function C.time(timer: *C.time_t): C.time_t <cimport'time',cinclude'<time.h>',nodecl> end

-- Conversion

function C.asctime(tp: *C.tm): cstring <cimport'asctime',cinclude'<time.h>',nodecl> end
function C.ctime(timer: *C.time_t): cstring <cimport'ctime',cinclude'<time.h>',nodecl> end
function C.gmtime(timer: *C.time_t): *C.tm <cimport'gmtime',cinclude'<time.h>',nodecl> end
function C.localtime(timer: *C.time_t): *C.tm <cimport'localtime',cinclude'<time.h>',nodecl> end
function C.timespec_get(ts: *C.timespec, base: cint): cint <cimport'timespec_get',cinclude'<time.h>',nodecl> end

-- Constants

global C.CLOCKS_PER_SEC: C.clock_t <const,cimport'CLOCKS_PER_SEC',cinclude'<time.h>',nodecl>
global C.TIME_UTC: cint <const,cimport'TIME_UTC',cinclude'<time.h>',nodecl>
