global typeid = @uint32

global function typeid_of(x: auto): typeid <inline>
  ## local xtype = x.type.is_type and x.value or x.type
  return #[xtype.id]#
end

-- Returns the type of its only argument, coded as a string.
-- The niltype returns "nil",
-- the nilptr type returns "pointer",
-- arithmetic types returns "number",
-- types that represents a string returns "string",
-- other types returns the underlying type name.
global function type(x: auto): string <inline>
  ## if x.type.is_niltype then
    return 'nil'
  ## elseif x.type.is_nilptr then
    return 'pointer'
  ## elseif x.type.is_arithmetic then
    return 'number'
  ## elseif x.type.is_stringy then
    return 'string'
  ## else
    return #[x.type.name]#
  ## end
end

global typeinfo = @record {
  id: typeid,
  name: string,
  codename: string
}

global function typeinfo_of(x: auto): typeinfo <inline>
  ## local xtype = x.type.is_type and x.value or x.type
  return (@typeinfo){
    id = #[xtype.id]#,
    name = #[xtype.name]#,
    codename = #[xtype.codename]#
  }
end
