--[[
The arguments library provides the global sequence `arg`,
which is filled with command line arguments on initialization.
]]

require 'sequence'
require 'allocators.general'

-- Import argc and argv from C 'nelua_main'
local nelua_argc: cint <cimport, nodecl>
local nelua_argv: *[0]cstring <cimport, nodecl>

--[[
Sequence of command line arguments.

The value at index `0` is usually filled with the program executable name.
The values starting from index `1` up to `#arg` contains each command line argument.
]]
global arg: sequence(string, GeneralAllocator)

-- setup args
if nelua_argc > 0 then
  local narg: usize = (@usize)(nelua_argc-1)
  arg:reserve(narg)
  for i:usize=0,narg do
    arg[i] = nelua_argv[i]
  end
end

-- NOTE: The memory of `arg` is never freed, but it's fine, it's not a leak for global variables.
